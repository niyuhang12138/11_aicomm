name: Windows Build

on:
  push:
    branches: [master, main, dev]
    tags: ["v*"]
  pull_request:
    branches: [master, main]
  workflow_dispatch:
    inputs:
      debug_enabled:
        description: "Run the build with debug logging enabled"
        required: false
        default: false
        type: boolean

env:
  SUBDIRS: chat chatapp/src-tauri

jobs:
  build-windows:
    runs-on: windows-latest
    services:
      postgres:
        image: postgres:17
        env:
          POSTGRES_PASSWORD: postgres
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          submodules: recursive
      - name: Install WebView2
        run: |
          curl -L -o webview2.exe https://go.microsoft.com/fwlink/p/?LinkId=2124703
          start /wait webview2.exe /install
      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@stable
      - name: Install cargo tools
        run: |
          cargo install cargo-nextest --locked
          cargo install cargo-llvm-cov --locked
          cargo install clippy --locked
      - name: Setup Rust cache
        uses: Swatinem/rust-cache@v2
      - name: Check code format
        shell: pwsh
        run: |
          for dir in ${{ env.SUBDIRS }}; do
            cd $dir
            cargo fmt --all -- --check
            cd ..
          done
          - name: Check the package for errors
          run: |
            for dir in ${{ env.SUBDIRS }}; do
              cd $dir
              cargo check --all
              cd ..
            done
      - name: Lint rust sources
        run: |
          for dir in ${{ env.SUBDIRS }}; do
            cd $dir
            cargo clippy --all-targets --all-features --tests --benches -- -D warnings
            cd ..
          done
      - name: Execute rust tests
        run: |
          for dir in ${{ env.SUBDIRS }}; do
            cd $dir
            cargo nextest run --all-features
            cd ..
          done
      - name: Generate a changelog
        uses: orhun/git-cliff-action@v2
        id: git-cliff
        if: startsWith(github.ref, 'refs/tags/')
        with:
          config: cliff.toml
          args: -vv --latest --strip header
        env:
          OUTPUT: CHANGES.md
      - name: Release
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          body: ${{ steps.git-cliff.outputs.content }}
          files: |
            release/*.msi
            release/*.exe
            target/release/*.deb  # Linux 包
            target/release/*.app  # macOS 包
